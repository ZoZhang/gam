'use strict';

/**
 *
 * @typedef {Object} Wallet
 * @property {Object} account_image, account image.
 * @property {Object} asset_image, asset image.
 * @property {Object} key_images, key image.
 *
 **/

var walletAPI = function walletAPI(connection) {
  return {
    /**
     * Reset specified Chain Core.
     *
     * @returns {Promise<Wallet>} Promise resolved on success.
     */
    backupWallet: function backupWallet() {
      return connection.request('/backup-wallet', {});
    },

    /**
     * Get info on specified Chain Core.
     *
     * @param {Wallet} wallet info.
     * @returns {Promise>} Promise resolved on success.
     */
    restoWallet: function restoWallet(params) {
      return connection.request('/restore-wallet', params);
    },

    /**
     * Get info on specified Chain Core.
     *
     * @returns {Promise>} Promise resolved on success.
     */
    rescanWallet: function rescanWallet() {
      return connection.request('/rescan-wallet', {});
    },

    /**
     * Recovery wallet and accounts from root XPubs.
     * All accounts and balances of bip44 multi-account hierarchy for
     * deterministic wallets can be restored via root xpubs.
     *
     * @param {Object} xpubs, root XPubs.
     * @returns {Promise>} Promise resolved on success.
     */
    recoveryWallet: function recoveryWallet(xpubs) {
      return connection.request('/recovery-wallet', { xpubs: xpubs });
    },

    /**
     * Return the information of wallet.
     *
     * @returns {Promise>} Promise resolved on success.
     */
    walletInfo: function walletInfo() {
      return connection.request('/wallet-info', {});
    }
  };
};

module.exports = walletAPI;