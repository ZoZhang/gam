'use strict';

var _connection = require('./connection');

var _connection2 = _interopRequireDefault(_connection);

var _accounts = require('./api/accounts');

var _accounts2 = _interopRequireDefault(_accounts);

var _assets = require('./api/assets');

var _assets2 = _interopRequireDefault(_assets);

var _keys = require('./api/keys');

var _keys2 = _interopRequireDefault(_keys);

var _transactions = require('./api/transactions');

var _transactions2 = _interopRequireDefault(_transactions);

var _balances = require('./api/balances');

var _balances2 = _interopRequireDefault(_balances);

var _unspentOutputs = require('./api/unspentOutputs');

var _unspentOutputs2 = _interopRequireDefault(_unspentOutputs);

var _accessTokens = require('./api/accessTokens');

var _accessTokens2 = _interopRequireDefault(_accessTokens);

var _config = require('./api/config');

var _config2 = _interopRequireDefault(_config);

var _block = require('./api/block');

var _block2 = _interopRequireDefault(_block);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Client = function Client(baseUrl, token) {
  _classCallCheck(this, Client);

  this.connection = new _connection2.default(baseUrl, token);

  this.accounts = new _accounts2.default(this.connection);
  this.assets = new _assets2.default(this.connection);
  this.keys = new _keys2.default(this.connection);
  this.transactions = new _transactions2.default(this.connection);
  this.balances = new _balances2.default(this.connection);
  this.unspentOutputs = new _unspentOutputs2.default(this.connection);
  this.accessTokens = new _accessTokens2.default(this.connection);
  this.status = new _config2.default(this.connection);
  this.block = new _block2.default(this.connection);
};

module.exports = Client;